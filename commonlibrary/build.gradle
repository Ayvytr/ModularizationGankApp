//def isLib = false
if (isLib) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api rootProject.ext.support.appcompat_v7
    api rootProject.ext.support.recyclerview
    api rootProject.ext.support.constraint
    api rootProject.ext.support.design
    api rootProject.ext.support.cardview

    api rootProject.ext.dependencies.rxjava2
    api(rootProject.ext.dependencies.rxjava2_android) {
        exclude module: "rxjava"
    }
    api rootProject.ext.dependencies.rxlifecycle2_components

    api rootProject.ext.dependencies.glide

    api rootProject.ext.kotlin.kotlin_jdk7
    api rootProject.ext.kotlin.anko
    api rootProject.ext.kotlin.anko_commons
    api rootProject.ext.kotlin.easykotlin

    api rootProject.ext.dependencies.logger

    api rootProject.ext.dependencies.junit
    api rootProject.ext.dependencies.testRunner
    api rootProject.ext.dependencies.espresso

    api rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknife_compiler

    api rootProject.ext.dependencies.agentweb

    api rootProject.ext.dependencies.arouter

    api rootProject.ext.dependencies.smartrefresh

    api rootProject.ext.dependencies.photoview

    api rootProject.ext.dependencies.andpermission

    if (isLib) {
        api project(":mvp")
        api project(":network")
        api project(":baseadapter")
    }
}
